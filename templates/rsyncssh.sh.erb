#!/bin/bash
#set -x
# Simple script for backup via rsync over ssh
# (C) Lab42 - www.lab42.it
# Released under the terms of Apache2

# GENERAL SETTINGS
config=<%= scope.lookupvar('rsyncssh::configfile') %>
if [ -n $2 ] ; then
	schedule=$2
fi
localbackupdir=<%= scope.lookupvar('rsyncssh::backupdir') %>
archivedir=<%= scope.lookupvar('rsyncssh::archivedir') %>
snapshotdir=<%= scope.lookupvar('rsyncssh::snapshotdir') %>
sshuser=<%= scope.lookupvar('rsyncssh::user') %>

if [ $localbackupdir = "/" ] ; then
	echo "Backup dir cannot be /"
	exit 1
fi


backup () {
cat $config | grep $schedule | while read line
do
        backupnode=`echo $line |awk 'BEGIN { FS=":" } { print $1 }'`
        backupdir=`echo $line |awk 'BEGIN { FS=":" } { print $2 }'`

	[ -d $localbackupdir/$backupnode/$backupdir ] || mkdir -p $localbackupdir/$backupnode/$backupdir

	echo "Backing up $backupnode:$backupdir" 
        rsync -avz  -e "ssh -o StrictHostKeyChecking=no -p <%= scope.lookupvar('rsyncssh::sshport') %>" $sshuser@$backupnode:$backupdir/* $localbackupdir/$backupnode$backupdir

	echo "-----------------------------------------"
 
done
}

archive () {
[ -d $archivedir ] || mkdir -p $archivedir
cd $archivedir

cat $config | while read line
do
        backupnode=`echo $line |awk 'BEGIN { FS=":" } { print $1 }'`
        backupdir=`echo $line |awk 'BEGIN { FS=":" } { print $2 }'`
        
	archivefile="$backupnode-\$backupdir.tar.gz"
	echo "Creating a backup archive: $archivedir/$archivefile" 
#	tar -zcvf $archivefile $localbackupdir/$backupnode/$backupdir
	echo "-----------------------------------------"
 
done
}

snapshot () {

daysnapshotdir=$snapshotdir/`date +%Y%m%d`
[ -d $daysnapshotdir ] || mkdir -p $daysnapshotdir

cat $config | grep $schedule | while read line
do
        backupnode=`echo $line |awk 'BEGIN { FS=":" } { print $1 }'`
        backupdir=`echo $line |awk 'BEGIN { FS=":" } { print $2 }'`

	echo "Snapshot of $backupnode:$backupdir in $daysnapshotdir" 
	[ -d $daysnapshotdir/$backupnode ] || mkdir -p $daysnapshotdir/$backupnode
	rsync -avz  $localbackupdir/$backupnode/$backupdir $daysnapshotdir/$backupnode
	echo "-----------------------------------------"
 
done
}

latest () {

lockfile=$snapshotdir/latest/lock
daysnapshotdir=$snapshotdir/latest
[ -d $daysnapshotdir ] || mkdir -p $daysnapshotdir

if [ -f $lockfile ] ; then
  echo "Lockfile $lockfile exists. Exiting"
  exit 0
fi

echo "Job started at $(date)" > $lockfile

cat $config | grep $schedule | while read line
do
        backupnode=`echo $line |awk 'BEGIN { FS=":" } { print $1 }'`
        backupdir=`echo $line |awk 'BEGIN { FS=":" } { print $2 }'`

        echo "Snapshot of $backupnode:$backupdir in $daysnapshotdir" 
        [ -d $daysnapshotdir/$backupnode ] || mkdir -p $daysnapshotdir/$backupnode
        rsync -avz --delete $localbackupdir/$backupnode/$backupdir $daysnapshotdir/$backupnode
        echo "-----------------------------------------"

done

rm -f $lockfile
}

#### HERE BEGINS THE HARD WORK

case "$1" in
  backup)
        backup
        ;;
  snapshot)
        snapshot
        ;;
  latest)
        latest
        ;;
  archive)
        # archive
        echo "Not yet implemented"
        ;;
  *)
        echo $"Usage: $prog {backup|snapshot|archive} {schedule}"
        exit 1
esac
